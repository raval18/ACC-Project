https://www.w3schools.com/html/html5_syntax.asp
HTML Style Guide and Coding Conventions Tutorials References Exercises Videos NEW Menu Log in Paid Courses Website NEW HTML CSS JAVASCRIPT SQL PYTHON PHP BOOTSTRAP HOW TO W3.CSS JAVA JQUERY C++ C# R React Kotlin ? ? ? × Tutorials HTML and CSS Learn HTML Learn CSS Learn RWD Learn Bootstrap Learn W3.CSS Learn Colors Learn Icons Learn Graphics Learn SVG Learn Canvas Learn How To Learn Sass Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery JavaScript Learn JavaScript Learn jQuery Learn React Learn AngularJS Learn JSON Learn AJAX Learn AppML Learn W3.JS Programming Learn Python Learn Java Learn C++ Learn C# Learn R Learn Kotlin Learn Go Server Side Learn SQL Learn MySQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Learn Git Web Building Create a Website NEW Web Templates Web Statistics Web Certificates Web Development Code Editor Test Your Typing Speed Play a Code Game Cyber Security Accessibility Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel Learn Google Sheets XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × References HTML HTML Tag Reference HTML Browser Support HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference CSS CSS Reference CSS Browser Support CSS Selector Reference Bootstrap 3 Reference Bootstrap 4 Reference W3.CSS Reference Icon Reference Sass Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference AppML Reference W3.JS Reference Programming Python Reference Java Reference Server Side SQL Reference MySQL Reference PHP Reference ASP Reference XML XML DOM Reference XML Http Reference XSLT Reference XML Schema Reference Character Sets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 × Exercises and Quizzes Exercises HTML Exercises CSS Exercises JavaScript Exercises SQL Exercises MySQL Exercises PHP Exercises Python Exercises NumPy Exercises Pandas Exercises SciPy Exercises jQuery Exercises Java Exercises C++ Exercises C# Exercises R Exercises Kotlin Exercises Go Exercises Bootstrap Exercises Bootstrap 4 Exercises Bootstrap 5 Exercises Git Exercises Quizzes HTML Quiz CSS Quiz JavaScript Quiz SQL Quiz MySQL Quiz PHP Quiz Python Quiz NumPy Quiz Pandas Quiz SciPy Quiz jQuery Quiz Java Quiz C++ Quiz C# Quiz R Quiz XML Quiz Cyber Security Quiz Bootstrap Quiz Bootstrap 4 Quiz Bootstrap 5 Quiz Accessibility Quiz Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course PHP Course Python Course NumPy Course Pandas Course Data Analytics Course jQuery Course Java Course C++ Course C# Course R Course XML Course Cyber Security Course Accessibility Course Certificates HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate PHP Certificate Python Certificate Data Science Certificate Bootstrap 3 Certificate Bootstrap 4 Certificate jQuery Certificate Java Certificate C++ Certificate React Certificate XML Certificate × Tutorials References Exercises Paid Courses Spaces Videos Shop HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charset HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes HTML Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Geolocation HTML Drag/Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Quiz HTML Exercises HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Style Guide ? Previous Next ? A consistent, clean, and tidy HTML code makes it easier for others to read and understand your code. Here are some guidelines and tips for creating good HTML code. Always Declare Document Type Always declare the document type as the first line in your document. The correct document type for HTML is: <!DOCTYPE html> Use Lowercase Element Names HTML allows mixing uppercase and lowercase letters in element names. However, we recommend using lowercase element names, because: Mixing uppercase and lowercase names looks bad Developers normally use lowercase names Lowercase looks cleaner Lowercase is easier to write Good: <body> <p>This is a paragraph.</p> </body> Bad: <BODY> <P>This is a paragraph.</P> </BODY> Close All HTML Elements In HTML, you do not have to close all elements (for example the <p> element). However, we strongly recommend closing all HTML elements, like this: Good: <section>   <p>This is a paragraph.</p>   <p>This is a paragraph.</p> </section> Bad: <section>   <p>This is a paragraph.   <p>This is a paragraph. </section> Use Lowercase Attribute Names HTML allows mixing uppercase and lowercase letters in attribute names. However, we recommend using lowercase attribute names, because: Mixing uppercase and lowercase names looks bad Developers normally use lowercase names Lowercase look cleaner Lowercase are easier to write Good: <a href="https://www.w3schools.com/html/">Visit our HTML tutorial</a> Bad: <a HREF="https://www.w3schools.com/html/">Visit our HTML tutorial</a> Always Quote Attribute Values HTML allows attribute values without quotes. However, we recommend quoting attribute values, because: Developers normally quote attribute values Quoted values are easier to read You MUST use quotes if the value contains spaces Good: <table class="striped"> Bad: <table class=striped> Very bad: This will not work, because the value contains spaces: <table class=table striped> Always Specify alt, width, and height for Images Always specify the alt attribute for images. This attribute is important if the image for some reason cannot be displayed. Also, always define the width and height of images. This reduces flickering, because the browser can reserve space for the image before loading. Good: <img src="html5.gif" alt="HTML5" style="width:128px;height:128px"> Bad: <img src="html5.gif"> Spaces and Equal Signs HTML allows spaces around equal signs. But space-less is easier to read and groups entities better together. Good: <link rel="stylesheet" href="styles.css"> Bad: <link rel = "stylesheet" href = "styles.css"> Avoid Long Code Lines When using an HTML editor, it is NOT convenient to scroll right and left to read the HTML code. Try to avoid too long code lines. Blank Lines and Indentation Do not add blank lines, spaces, or indentations without a reason. For readability, add blank lines to separate large or logical code blocks. For readability, add two spaces of indentation. Do not use the tab key. Good: <body> <h1>Famous Cities</h1> <h2>Tokyo</h2> <p>Tokyo is the capital of Japan, the center of the Greater Tokyo Area, and the most populous metropolitan area in the world. It is the seat of the Japanese government and the Imperial Palace, and the home of the Japanese Imperial Family.</p> </body> Bad: <body>   <h1>Famous Cities</h1>   <h2>Tokyo</h2>   <p>     Tokyo is the capital of Japan, the center of the Greater Tokyo Area,     and the most populous metropolitan area in the world.     It is the seat of the Japanese government and the Imperial Palace,     and the home of the Japanese Imperial Family.   </p> </body> Good Table Example: <table>   <tr>     <th>Name</th>     <th>Description</th>   </tr>   <tr>     <td>A</td>     <td>Description of A</td>   </tr>   <tr>     <td>B</td>     <td>Description of B</td>   </tr> </table> Good List Example: <ul>   <li>London</li>   <li>Paris</li>   <li>Tokyo</li> </ul> Never Skip the <title> Element The <title> element is required in HTML. The contents of a page title is very important for search engine optimization (SEO)! The page title is used by search engine algorithms to decide the order when listing pages in search results. The <title> element: defines a title in the browser toolbar provides a title for the page when it is added to favorites displays a title for the page in search-engine results So, try to make the title as accurate and meaningful as possible:  <title>HTML Style Guide and Coding Conventions</title> Omitting <html> and <body>? An HTML page will validate without the <html> and <body> tags: Example <!DOCTYPE html> <head>   <title>Page Title</title> </head> <h1>This is a heading</h1> <p>This is a paragraph.</p> Try it Yourself » However, we strongly recommend to always add the <html> and <body> tags! Omitting <body> can produce errors in older browsers. Omitting <html> and <body> can also crash DOM and XML software. Omitting <head>? The HTML <head> tag can also be omitted. Browsers will add all elements before <body>, to a default <head> element. Example <!DOCTYPE html> <html> <title>Page Title</title> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> Try it Yourself » However, we recommend using the <head> tag. Close Empty HTML Elements? In HTML, it is optional to close empty elements. Allowed: <meta charset="utf-8"> Also Allowed: <meta charset="utf-8" /> If you expect XML/XHTML software to access your page, keep the closing slash (/), because it is required in XML and XHTML. Add the lang Attribute You should always include the lang attribute inside the <html> tag, to declare the language of the Web page. This is meant to assist search engines and browsers. Example <!DOCTYPE html> <html lang="en-us"> <head>   <title>Page Title</title> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> Try it Yourself » Meta Data To ensure proper interpretation and correct search engine indexing, both the language and the character encoding <meta charset="charset"> should be defined as early as possible in an HTML document: <!DOCTYPE html> <html lang="en-us"> <head>   <meta charset="UTF-8">   <title>Page Title</title> </head> Setting The Viewport The viewport is the user's visible area of a web page. It varies with the device - it will be smaller on a mobile phone than on a computer screen. You should include the following <meta> element in all your web pages: <meta name="viewport" content="width=device-width, initial-scale=1.0"> This gives the browser instructions on how to control the page's dimensions and scaling. The width=device-width part sets the width of the page to follow the screen-width of the device (which will vary depending on the device). The initial-scale=1.0 part sets the initial zoom level when the page is first loaded by the browser. Here is an example of a web page without the viewport meta tag, and the same web page with the viewport meta tag: Tip: If you are browsing this page with a phone or a tablet, you can click on the two links below to see the difference. Without the viewport meta tag With the viewport meta tag HTML Comments Short comments should be written on one line, like this: <!-- This is a comment --> Comments that spans more than one line, should be written like this: <!--   This is a long comment example. This is a long comment example.   This is a long comment example. This is a long comment example. --> Long comments are easier to observe if they are indented with two spaces. Using Style Sheets Use simple syntax for linking to style sheets (the type attribute is not necessary): <link rel="stylesheet" href="styles.css"> Short CSS rules can be written compressed, like this: p.intro {font-family:Verdana;font-size:16em;} Long CSS rules should be written over multiple lines: body {   background-color: lightgrey;   font-family: "Arial Black", Helvetica, sans-serif;   font-size: 16em;   color: black; } Place the opening bracket on the same line as the selector Use one space before the opening bracket Use two spaces of indentation Use semicolon after each property-value pair, including the last Only use quotes around values if the value contains spaces Place the closing bracket on a new line, without leading spaces Loading JavaScript in HTML Use simple syntax for loading external scripts (the type attribute is not necessary): <script src="myscript.js"> Accessing HTML Elements with JavaScript Using "untidy" HTML code can result in JavaScript errors. These two JavaScript statements will produce different results: Example getElementById("Demo").innerHTML = "Hello"; getElementById("demo").innerHTML = "Hello"; Try it Yourself » Visit the JavaScript Style Guide. Use Lower Case File Names Some web servers (Apache, Unix) are case sensitive about file names: "london.jpg" cannot be accessed as "London.jpg". Other web servers (Microsoft, IIS) are not case sensitive: "london.jpg" can be accessed as "London.jpg". If you use a mix of uppercase and lowercase, you have to be aware of this. If you move from a case-insensitive to a case-sensitive server, even small errors will break your web! To avoid these problems, always use lowercase file names! File Extensions HTML files should have a .html extension (.htm is allowed). CSS files should have a .css extension. JavaScript files should have a .js extension. Differences Between .htm and .html? There is no difference between the .htm and .html file extensions! Both will be treated as HTML by any web browser and web server. Default Filenames When a URL does not specify a filename at the end (like "https://www.w3schools.com/"), the server just adds a default filename, such as "index.html", "index.htm", "default.html", or "default.htm". If your server is configured only with "index.html" as the default filename, your file must be named "index.html", and not "default.html". However, servers can be configured with more than one default filename; usually you can set up as many default filenames as you want. ? Previous Next ? NEW We just launched W3Schools videos Explore now COLOR PICKER Get certified by completing a course today! w3schools CERTIFIED . 221 Get started CODE GAME Play Game Report Error Forum About Shop × Report Error If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail: help@w3schools.com × Thank You For Helping Us! Your message has been sent to W3Schools. Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Web Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course Python Course PHP Course jQuery Course Java Course C++ Course C# Course XML Course Get Certified » W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2021 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS. "; // txt += ""; txt2 = txt; txt += ""; txt2 += ""; if (cc != "F") { txt += ''; txt += ''; txt += ''; txt += ''; txt2 += ''; txt2 += ''; txt2 += ''; txt2 += ''; } if (cc == "J") { checkIfMypage2IsInView(); window.addEventListener("scroll", checkIfMypage2IsInView); } if (cc == "Q") { if (degrees == 359.99) { txt += "?"; } } txt += '+1?
