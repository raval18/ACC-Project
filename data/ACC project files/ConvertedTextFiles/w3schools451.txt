https://www.w3schools.com/css/css3_flexbox_container.asp
CSS Flexbox Container Tutorials References Exercises Videos NEW Menu Log in Paid Courses Website NEW HTML CSS JAVASCRIPT SQL PYTHON PHP BOOTSTRAP HOW TO W3.CSS JAVA JQUERY C++ C# R React Kotlin ? ? ? × Tutorials HTML and CSS Learn HTML Learn CSS Learn RWD Learn Bootstrap Learn W3.CSS Learn Colors Learn Icons Learn Graphics Learn SVG Learn Canvas Learn How To Learn Sass Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery JavaScript Learn JavaScript Learn jQuery Learn React Learn AngularJS Learn JSON Learn AJAX Learn AppML Learn W3.JS Programming Learn Python Learn Java Learn C++ Learn C# Learn R Learn Kotlin Learn Go Server Side Learn SQL Learn MySQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Learn Git Web Building Create a Website NEW Web Templates Web Statistics Web Certificates Web Development Code Editor Test Your Typing Speed Play a Code Game Cyber Security Accessibility Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel Learn Google Sheets XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × References HTML HTML Tag Reference HTML Browser Support HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference CSS CSS Reference CSS Browser Support CSS Selector Reference Bootstrap 3 Reference Bootstrap 4 Reference W3.CSS Reference Icon Reference Sass Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference AppML Reference W3.JS Reference Programming Python Reference Java Reference Server Side SQL Reference MySQL Reference PHP Reference ASP Reference XML XML DOM Reference XML Http Reference XSLT Reference XML Schema Reference Character Sets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 × Exercises and Quizzes Exercises HTML Exercises CSS Exercises JavaScript Exercises SQL Exercises MySQL Exercises PHP Exercises Python Exercises NumPy Exercises Pandas Exercises SciPy Exercises jQuery Exercises Java Exercises C++ Exercises C# Exercises R Exercises Kotlin Exercises Go Exercises Bootstrap Exercises Bootstrap 4 Exercises Bootstrap 5 Exercises Git Exercises Quizzes HTML Quiz CSS Quiz JavaScript Quiz SQL Quiz MySQL Quiz PHP Quiz Python Quiz NumPy Quiz Pandas Quiz SciPy Quiz jQuery Quiz Java Quiz C++ Quiz C# Quiz R Quiz XML Quiz Cyber Security Quiz Bootstrap Quiz Bootstrap 4 Quiz Bootstrap 5 Quiz Accessibility Quiz Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course PHP Course Python Course NumPy Course Pandas Course Data Analytics Course jQuery Course Java Course C++ Course C# Course R Course XML Course Cyber Security Course Accessibility Course Certificates HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate PHP Certificate Python Certificate Data Science Certificate Bootstrap 3 Certificate Bootstrap 4 Certificate jQuery Certificate Java Certificate C++ Certificate React Certificate XML Certificate × Tutorials References Exercises Paid Courses Spaces Videos Shop CSS Tutorial CSS HOME CSS Introduction CSS Syntax CSS Selectors CSS How To CSS Comments CSS Colors Colors RGB HEX HSL CSS Backgrounds Background Color Background Image Background Repeat Background Attachment Background Shorthand CSS Borders Borders Border Width Border Color Border Sides Border Shorthand Rounded Borders CSS Margins Margins Margin Collapse CSS Padding CSS Height/Width CSS Box Model CSS Outline Outline Outline Width Outline Color Outline Shorthand Outline Offset CSS Text Text Color Text Alignment Text Decoration Text Transformation Text Spacing Text Shadow CSS Fonts Font Family Font Web Safe Font Fallbacks Font Style Font Size Font Google Font Pairings Font Shorthand CSS Icons CSS Links CSS Lists CSS Tables Table Borders Table Size Table Alignment Table Style Table Responsive CSS Display CSS Max-width CSS Position CSS Z-index CSS Overflow CSS Float Float Clear Float Examples CSS Inline-block CSS Align CSS Combinators CSS Pseudo-class CSS Pseudo-element CSS Opacity CSS Navigation Bar Navbar Vertical Navbar Horizontal Navbar CSS Dropdowns CSS Image Gallery CSS Image Sprites CSS Attr Selectors CSS Forms CSS Counters CSS Website Layout CSS Units CSS Specificity CSS !important CSS Math Functions CSS Advanced CSS Rounded Corners CSS Border Images CSS Backgrounds CSS Colors CSS Color Keywords CSS Gradients Linear Gradients Radial Gradients Conic Gradients CSS Shadows Shadow Effects Box Shadow CSS Text Effects CSS Web Fonts CSS 2D Transforms CSS 3D Transforms CSS Transitions CSS Animations CSS Tooltips CSS Style Images CSS Image Reflection CSS object-fit CSS object-position CSS Buttons CSS Pagination CSS Multiple Columns CSS User Interface CSS Variables The var() Function Overriding Variables Variables and JavaScript Variables in Media Queries CSS Box Sizing CSS Media Queries CSS MQ Examples CSS Flexbox CSS Flexbox CSS Flex Container CSS Flex Items CSS Flex Responsive CSS Responsive RWD Intro RWD Viewport RWD Grid View RWD Media Queries RWD Images RWD Videos RWD Frameworks RWD Templates CSS Grid Grid Intro Grid Container Grid Item CSS SASS SASS Tutorial CSS Examples CSS Templates CSS Examples CSS Quiz CSS Exercises CSS Certificate CSS References CSS Reference CSS Selectors CSS Functions CSS Reference Aural CSS Web Safe Fonts CSS Animatable CSS Units CSS PX-EM Converter CSS Colors CSS Color Values CSS Default Values CSS Browser Support CSS Flex Container ? Previous Next ? Parent Element (Container) Like we specified in the previous chapter, this is a flex container (the blue area) with three flex items: 1 2 3 The flex container becomes flexible by setting the display property to flex: Example .flex-container {   display: flex; } Try it Yourself » The flex container properties are: flex-direction flex-wrap flex-flow justify-content align-items align-content The flex-direction Property The flex-direction property defines in which direction the container wants to stack the flex items. 1 2 3 Example The column value stacks the flex items vertically (from top to bottom): .flex-container {   display: flex;   flex-direction: column; } Try it Yourself » Example The column-reverse value stacks the flex items vertically (but from bottom to top): .flex-container {   display: flex;   flex-direction: column-reverse; } Try it Yourself » Example The row value stacks the flex items horizontally (from left to right): .flex-container {   display: flex;   flex-direction: row; } Try it Yourself » Example The row-reverse value stacks the flex items horizontally (but from right to left): .flex-container {   display: flex;   flex-direction: row-reverse; } Try it Yourself » The flex-wrap Property The flex-wrap property specifies whether the flex items should wrap or not. The examples below have 12 flex items, to better demonstrate the flex-wrap property. 1 2 3 4 5 6 7 8 9 10 11 12 Example The wrap value specifies that the flex items will wrap if necessary: .flex-container {   display: flex;   flex-wrap: wrap; } Try it Yourself » Example The nowrap value specifies that the flex items will not wrap (this is default): .flex-container {   display: flex;   flex-wrap: nowrap; } Try it Yourself » Example The wrap-reverse value specifies that the flexible items will wrap if necessary, in reverse order: .flex-container {   display: flex;   flex-wrap: wrap-reverse; } Try it Yourself » The flex-flow Property The flex-flow property is a shorthand property for setting both the flex-direction and flex-wrap properties. Example .flex-container {   display: flex;   flex-flow: row wrap; } Try it Yourself » The justify-content Property The justify-content property is used to align the flex items: 1 2 3 Example The center value aligns the flex items at the center of the container: .flex-container {   display: flex;   justify-content: center; } Try it Yourself » Example The flex-start value aligns the flex items at the beginning of the container (this is default): .flex-container {   display: flex;   justify-content: flex-start; } Try it Yourself » Example The flex-end value aligns the flex items at the end of the container: .flex-container {   display: flex;   justify-content: flex-end; } Try it Yourself » Example The space-around value displays the flex items with space before, between, and after the lines: .flex-container {   display: flex;   justify-content: space-around; } Try it Yourself » Example The space-between value displays the flex items with space between the lines: .flex-container {   display: flex;   justify-content: space-between; } Try it Yourself » The align-items Property The align-items property is used to align the flex items. 1 2 3 In these examples we use a 200 pixels high container, to better demonstrate the align-items property. Example The center value aligns the flex items in the middle of the container: .flex-container {   display: flex;   height: 200px;   align-items: center; } Try it Yourself » Example The flex-start value aligns the flex items at the top of the container: .flex-container {   display: flex;   height: 200px;   align-items: flex-start; } Try it Yourself » Example The flex-end value aligns the flex items at the bottom of the container: .flex-container {   display: flex;   height: 200px;   align-items: flex-end; } Try it Yourself » Example The stretch value stretches the flex items to fill the container (this is default): .flex-container {   display: flex;   height: 200px;   align-items: stretch; } Try it Yourself » Example The baseline value aligns the flex items such as their baselines aligns: .flex-container {   display: flex;   height: 200px;   align-items: baseline; } Note: the example uses different font-size to demonstrate that the items gets aligned by the text baseline: 1 2 3 4 Try it Yourself » The align-content Property The align-content property is used to align the flex lines. 1 2 3 4 5 6 7 8 9 10 11 12 In these examples we use a 600 pixels high container, with the flex-wrap property set to wrap, to better demonstrate the align-content property. Example The space-between value displays the flex lines with equal space between them: .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: space-between; } Try it Yourself » Example The space-around value displays the flex lines with space before, between, and after them: .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: space-around; } Try it Yourself » Example The stretch value stretches the flex lines to take up the remaining space (this is default): .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: stretch; } Try it Yourself » Example The center value displays display the flex lines in the middle of the container: .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: center; } Try it Yourself » Example The flex-start value displays the flex lines at the start of the container: .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: flex-start; } Try it Yourself » Example The flex-end value displays the flex lines at the end of the container:  .flex-container {   display: flex;   height: 600px;   flex-wrap: wrap;   align-content: flex-end; } Try it Yourself » Perfect Centering In the following example we will solve a very common style problem: perfect centering. SOLUTION: Set both the justify-content and align-items properties to center, and the flex item will be perfectly centered: Example .flex-container {   display: flex;   height: 300px;   justify-content: center;   align-items: center; } Try it Yourself » The CSS Flexbox Container Properties The following table lists all the CSS Flexbox Container properties: Property Description align-content Modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines align-items Vertically aligns the flex items when the items do not use all available space on the cross-axis display Specifies the type of box used for an HTML element flex-direction Specifies the direction of the flexible items inside a flex container flex-flow A shorthand property for flex-direction and flex-wrap flex-wrap Specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line justify-content Horizontally aligns the flex items when the items do not use all available space on the main-axis ? Previous Next ? NEW We just launched W3Schools videos Explore now COLOR PICKER Get certified by completing a course today! w3schools CERTIFIED . 221 Get started CODE GAME Play Game Report Error Forum About Shop × Report Error If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail: help@w3schools.com × Thank You For Helping Us! Your message has been sent to W3Schools. Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Web Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course Python Course PHP Course jQuery Course Java Course C++ Course C# Course XML Course Get Certified » W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2021 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS. "; // txt += ""; txt2 = txt; txt += ""; txt2 += ""; if (cc != "F") { txt += ''; txt += ''; txt += ''; txt += ''; txt2 += ''; txt2 += ''; txt2 += ''; txt2 += ''; } if (cc == "J") { checkIfMypage2IsInView(); window.addEventListener("scroll", checkIfMypage2IsInView); } if (cc == "Q") { if (degrees == 359.99) { txt += "?"; } } txt += '+1?
