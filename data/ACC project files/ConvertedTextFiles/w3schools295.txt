https://www.w3schools.com/html/html_form_attributes_form.asp
HTML Input form* Attributes Tutorials References Exercises Videos NEW Menu Log in Paid Courses Website NEW HTML CSS JAVASCRIPT SQL PYTHON PHP BOOTSTRAP HOW TO W3.CSS JAVA JQUERY C++ C# R React Kotlin ? ? ? × Tutorials HTML and CSS Learn HTML Learn CSS Learn RWD Learn Bootstrap Learn W3.CSS Learn Colors Learn Icons Learn Graphics Learn SVG Learn Canvas Learn How To Learn Sass Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery JavaScript Learn JavaScript Learn jQuery Learn React Learn AngularJS Learn JSON Learn AJAX Learn AppML Learn W3.JS Programming Learn Python Learn Java Learn C++ Learn C# Learn R Learn Kotlin Learn Go Server Side Learn SQL Learn MySQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Learn Git Web Building Create a Website NEW Web Templates Web Statistics Web Certificates Web Development Code Editor Test Your Typing Speed Play a Code Game Cyber Security Accessibility Data Analytics Learn AI Learn Machine Learning Learn Data Science Learn NumPy Learn Pandas Learn SciPy Learn Matplotlib Learn Statistics Learn Excel Learn Google Sheets XML Tutorials Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × References HTML HTML Tag Reference HTML Browser Support HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference CSS CSS Reference CSS Browser Support CSS Selector Reference Bootstrap 3 Reference Bootstrap 4 Reference W3.CSS Reference Icon Reference Sass Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference AppML Reference W3.JS Reference Programming Python Reference Java Reference Server Side SQL Reference MySQL Reference PHP Reference ASP Reference XML XML DOM Reference XML Http Reference XSLT Reference XML Schema Reference Character Sets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 × Exercises and Quizzes Exercises HTML Exercises CSS Exercises JavaScript Exercises SQL Exercises MySQL Exercises PHP Exercises Python Exercises NumPy Exercises Pandas Exercises SciPy Exercises jQuery Exercises Java Exercises C++ Exercises C# Exercises R Exercises Kotlin Exercises Go Exercises Bootstrap Exercises Bootstrap 4 Exercises Bootstrap 5 Exercises Git Exercises Quizzes HTML Quiz CSS Quiz JavaScript Quiz SQL Quiz MySQL Quiz PHP Quiz Python Quiz NumPy Quiz Pandas Quiz SciPy Quiz jQuery Quiz Java Quiz C++ Quiz C# Quiz R Quiz XML Quiz Cyber Security Quiz Bootstrap Quiz Bootstrap 4 Quiz Bootstrap 5 Quiz Accessibility Quiz Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course PHP Course Python Course NumPy Course Pandas Course Data Analytics Course jQuery Course Java Course C++ Course C# Course R Course XML Course Cyber Security Course Accessibility Course Certificates HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate PHP Certificate Python Certificate Data Science Certificate Bootstrap 3 Certificate Bootstrap 4 Certificate jQuery Certificate Java Certificate C++ Certificate React Certificate XML Certificate × Tutorials References Exercises Paid Courses Spaces Videos Shop HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charset HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes HTML Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Geolocation HTML Drag/Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Quiz HTML Exercises HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Input form* Attributes ? Previous Next ? This chapter describes the different form* attributes for the HTML <input> element. The form Attribute The input form attribute specifies the form the <input> element belongs to. The value of this attribute must be equal to the id attribute of the <form> element it belongs to. Example An input field located outside of the HTML form (but still a part of the form): <form action="/action_page.php" id="form1">   <label for="fname">First name:</label>   <input type="text" id="fname" name="fname"><br><br>   <input type="submit" value="Submit"> </form> <label for="lname">Last name:</label> <input type="text" id="lname" name="lname" form="form1"> Try it Yourself » The formaction Attribute The input formaction attribute specifies the URL of the file that will process the input when the form is submitted. Note: This attribute overrides the action attribute of the <form> element. The formaction attribute works with the following input types: submit and image. Example An HTML form with two submit buttons, with different actions: <form action="/action_page.php">   <label for="fname">First name:</label>   <input type="text" id="fname" name="fname"><br><br>   <label for="lname">Last name:</label>   <input type="text" id="lname" name="lname"><br><br>   <input type="submit" value="Submit">   <input type="submit" formaction="/action_page2.php" value="Submit as Admin"> </form> Try it Yourself » The formenctype Attribute The input formenctype attribute specifies how the form-data should be encoded when submitted (only for forms with method="post"). Note: This attribute overrides the enctype attribute of the <form> element. The formenctype attribute works with the following input types: submit and image. Example A form with two submit buttons. The first sends the form-data with default encoding, the second sends the form-data encoded as "multipart/form-data": <form action="/action_page_binary.asp" method="post">   <label for="fname">First name:</label>   <input type="text" id="fname" name="fname"><br><br>   <input type="submit" value="Submit">   <input type="submit" formenctype="multipart/form-data"   value="Submit as Multipart/form-data"> </form> Try it Yourself » The formmethod Attribute The input formmethod attribute defines the HTTP method for sending form-data to the action URL. Note: This attribute overrides the method attribute of the <form> element. The formmethod attribute works with the following input types: submit and image. The form-data can be sent as URL variables (method="get") or as an HTTP post transaction (method="post"). Notes on the "get" method: This method appends the form-data to the URL in name/value pairs This method is useful for form submissions where a user want to bookmark the result There is a limit to how much data you can place in a URL (varies between browsers), therefore, you cannot be sure that all of the form-data will be correctly transferred Never use the "get" method to pass sensitive information! (password or other sensitive information will be visible in the browser's address bar) Notes on the "post" method: This method sends the form-data as an HTTP post transaction Form submissions with the "post" method cannot be bookmarked The "post" method is more robust and secure than "get", and "post" does not have size limitations Example A form with two submit buttons. The first sends the form-data with method="get". The second sends the form-data with method="post": <form action="/action_page.php" method="get">   <label for="fname">First name:</label>   <input type="text" id="fname" name="fname"><br><br>   <label for="lname">Last name:</label>   <input type="text" id="lname" name="lname"><br><br>   <input type="submit" value="Submit using GET">   <input type="submit" formmethod="post" value="Submit using POST"> </form> Try it Yourself » The formtarget Attribute The input formtarget attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form. Note: This attribute overrides the target attribute of the <form> element. The formtarget attribute works with the following input types: submit and image. Example A form with two submit buttons, with different target windows: <form action="/action_page.php">   <label for="fname">First name:</label>   <input type="text" id="fname" name="fname"><br><br>   <label for="lname">Last name:</label>   <input type="text" id="lname" name="lname"><br><br>   <input type="submit" value="Submit">   <input type="submit" formtarget="_blank" value="Submit to a new window/tab"> </form> Try it Yourself » The formnovalidate Attribute The input formnovalidate attribute specifies that an <input> element should not be validated when submitted. Note: This attribute overrides the novalidate attribute of the <form> element. The formnovalidate attribute works with the following input types: submit. Example A form with two submit buttons (with and without validation): <form action="/action_page.php">   <label for="email">Enter your email:</label>   <input type="email" id="email" name="email"><br><br>   <input type="submit" value="Submit">   <input type="submit" formnovalidate="formnovalidate"   value="Submit without validation"> </form> Try it Yourself » The novalidate Attribute The novalidate attribute is a <form> attribute. When present, novalidate specifies that all of the form-data should not be validated when submitted. Example Specify that no form-data should be validated on submit: <form action="/action_page.php" novalidate>   <label for="email">Enter your email:</label>   <input type="email" id="email" name="email"><br><br>   <input type="submit" value="Submit"> </form> Try it Yourself » HTML Form and Input Elements Tag Description <form> Defines an HTML form for user input <input> Defines an input control For a complete list of all available HTML tags, visit our HTML Tag Reference. ? Previous Next ? NEW We just launched W3Schools videos Explore now COLOR PICKER Get certified by completing a course today! w3schools CERTIFIED . 221 Get started CODE GAME Play Game Report Error Forum About Shop × Report Error If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail: help@w3schools.com × Thank You For Helping Us! Your message has been sent to W3Schools. Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Web Courses HTML Course CSS Course JavaScript Course Front End Course SQL Course Python Course PHP Course jQuery Course Java Course C++ Course C# Course XML Course Get Certified » W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2021 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS. "; // txt += ""; txt2 = txt; txt += ""; txt2 += ""; if (cc != "F") { txt += ''; txt += ''; txt += ''; txt += ''; txt2 += ''; txt2 += ''; txt2 += ''; txt2 += ''; } if (cc == "J") { checkIfMypage2IsInView(); window.addEventListener("scroll", checkIfMypage2IsInView); } if (cc == "Q") { if (degrees == 359.99) { txt += "?"; } } txt += '+1?
